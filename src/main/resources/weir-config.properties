### GENERAL PROPERTIES

# Reuse the result of previous (heavy) computations (e.g., extraction)
include = cache.properties
caching_enabled = true

# max number of pages to load from each source; 0 means no limit
max_pages_per_source =  0
# for realistic but not too slow experiments
# max_pages_per_source = 200
# n.b. check vs min overlapping pages

# a reg-exp to select subsets of linkable input pages;
# no value means no filter at all
# softid_filter = (.*[xXYZW].*)

# The types to use for typing the extracted vector
datatypes = STRING,NUMBER,MONEY,SPACE,MASS,DATE,PHONE,URL,ISBN

# The path (relative to the execution path of the JVM) to look for
# an experiment specification file named after the dataset and
# domain, e.g., swde-nbaplayer.xml
experiments_path = ./src/main/resources/experiments
experiments_test_path = ./src/test/resources/experiments

# The path (relative to the execution path of the JVM) to look for
# the dataset (web pages and all other input information)
dataset_path = ./dataset

### EXTRACTION PROPERTIES

# The minimum number of sample pages required
# to infer extraction rules
min_extraction_samples =  1
# 3 is good min value for this property

# The maximum number of sample pages used during 
# extraction process to infer extraction rules
max_extraction_samples = 10

# The classes of extraction rules to generate
extraction_rules_classes = POSITIONAL,RELATIVE

# Include properties for configuring the generation of relative XPath rules
include = ecgm.properties
					
# The max distance from a pivot to a value in a relative XPath rules
max_pivot_distance = 4

# The min number of consecutive pivot occurrences to process
# without producing any new relative extraction rule before
# giving up the generation over the occurrences of the same pivot
min_pivot_occurrences = 3

# The min/max length of a textual pivot
min_pivot_length =  2
max_pivot_length = 64

# The max length of textual values to extract 
max_value_length = 96

### SUB-PCDATA extraction properties

# The min number of non null pcdata to start looking for intra-PCDATA invariants
pcdata_undersampling_threshold = 3
# The java regexp used for PCDATA tokenization to
# infer intra/sub-PCDATA XPath extraction rules
pcdata_tokenization_pattern = ([\-\:\'\".\,/0-9])+|(\\s+)|(\\w+)|\\p{Punct}+
# The max char-length of a token to be considered as candidate invariant
# 0 means no limit
pcdata_max_invariant_length = 8
# A java regexp matching with tokens that should NOT be considered as
# candidate invariants, e.g., the unit measure markers;
# the empty pattern means no filter at all.
pcdata_invariant_blacklist  =\
(kilogram(s)?|kg|lb(s)?|pound(s)?|ounce(s)|st|\
meter|m|centimeter|cm|in(ch(es)?)?|f(oo)?t|\\'|\\"\
USD|EUR|GBP|$|\\u20AC|£|dollar|euro|sterling)

# Whether an extraction rule has to be removed once 
# it has been refined to extract a sub-pcdata value
remove_refined_rules = true

#pivotOnId CHECK red

# For LengthOfValuesFilter, the max char length of an extracted value
max_length_values = 120

# For NumberOfInvariantFilter, the max percentage of identical
# elements over all the extracted values in a vector 17 = 17%
max_percentage_equals = 70

# For NumberOfNullsFilter, the max percentage of null elements 70 = 70%
max_percentage_nulls  = 70

# The filters to apply over the extracted vectors of values
extraction_rules_filters = NUMBER_OF_INVARIANT,NUMBER_OF_NULLS,MAX_LENGTH

### INTEGRATION PROPERTIES

# max distance to consider the match  of a pair of extracted vectors
max_distance_threshold = 0.5

# For clustering extracted vectors, it indicates the maximum
# normalized distance in [0,1] between vectors grouped together
local_consistency_threshold = 0.0

# Min/Max number of overlapped sample pages between a pair of websites
# min_overlapping_samples = 16
# max_overlapping_samples = 40
min_overlapping_samples =  5
max_overlapping_samples = 20

# min percentage of non-null overlapping values, and min number of 
# non-null values, between two attributes to consider them related
min_loose_lc_ratio  = 0.5
min_loose_lc_values =  10 

# number of non-null pair of values at distance 1 to
# approximate the distance between two vectors to +inf;
# -1 means no approximation at all
ones2one = 5

#  Completely qualified name of the class bootstrapping the linkages
# linking_strategy = it.uniroma3.weir.linking.LegacySoftIdsLinker

# A min threshold over the similarity between two entities
# during the page-alignment process
entity_sim_threshold = 0.5

# Max number of candidate linkages to consider
linking_top_k = 1
# Thresholds to filter the candidate linkages 
linking_parameters = 2.0, 0.2, 0.05
# score-multiplier, first/second candidates decrease, others decrease

# The type of entities that are attached to pages for record linking
# SOFTID_ENTITY: an external soft-id
# VALUE_ENTITY:  set of [typed] values
entity_factory = SOFTID_ENTITY

# Use typed distance to compare term values from entities
typed_entities = true

# A min threshold over the similarity between two values/terms 
# during the templated jaccard distance computation
entity_term_sim_threshold = 0.35

# A max threshold over the idf of an extracted values/terms
# during the templated jaccard distance computation
entity_term_idf_threshold = 2

# Shrink the input sources to the overlapping pages, once found;
# Useful to create small yet well overlapping sources out of big
# but rarely linked input websites
shrink_to_overlap = false

# Work, either only on the overlap pages (true) 
#       or on all the site pages (false)
# i.e., "work" includes at least load & extract
work_on_overlap = true

### EVALUATION PROPERTIES

# For GolderReader, indicates whether it has to filter out
# non-redundant golden attributes before the evaluation starts
check_golden_redundancy = true

# Indicates whether an attribute matching with a golden 
# attribute has to be removed once used during the evaluation 
remove_matching_attribute = true

# How to compare two attributes during the evaluation:
# equality: percentage of equal  values ignoring case
# distance: average type-aware distance between values
match_evaluator = equality, distance

# Distance thresholds used by OracleIntegrator
perfect_match_threshold = 0.001
good_match_threshold    = 0.1
